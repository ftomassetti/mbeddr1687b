package Issue1687.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.adapter.structure.concept.SConceptAdapterById;
import jetbrains.mps.smodel.adapter.structure.concept.SInterfaceConceptAdapterById;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.SNodePointer;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  private final Map<SConceptId, Integer> myIndexMap = new HashMap<SConceptId, Integer>(3);
  /*package*/ final ConceptDescriptor myConceptEqualToContextualExpression = createDescriptorForEqualToContextualExpression();
  /*package*/ final ConceptDescriptor myConceptExpressionsList = createDescriptorForExpressionsList();
  /*package*/ final ConceptDescriptor myConceptInRangeExpression = createDescriptorForInRangeExpression();

  public StructureAspectDescriptor() {
    myIndexMap.put(myConceptEqualToContextualExpression.getId(), 0);
    myIndexMap.put(myConceptExpressionsList.getId(), 1);
    myIndexMap.put(myConceptInRangeExpression.getId(), 2);
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptEqualToContextualExpression, myConceptExpressionsList, myConceptInRangeExpression);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    Integer index = myIndexMap.get(id);
    if (index == null) {
      return null;
    }
    switch (((int) index)) {
      case 0:
        return myConceptEqualToContextualExpression;
      case 1:
        return myConceptExpressionsList;
      case 2:
        return myConceptInRangeExpression;
      default:
        throw new IllegalStateException();
    }
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    Integer res = null;
    if (c instanceof SConceptAdapterById) {
      res = myIndexMap.get(((SConceptAdapterById) c).getId());
    } else if (c instanceof SInterfaceConceptAdapterById) {
      res = myIndexMap.get(((SInterfaceConceptAdapterById) c).getId());
    }
    return (res == null ? -1 : res);
  }

  private static ConceptDescriptor createDescriptorForEqualToContextualExpression() {
    return new ConceptDescriptorBuilder("Issue1687.structure.EqualToContextualExpression", MetaIdFactory.conceptId(0x1707e44579784fc0L, 0x955f614507f5e1bbL, 0x3253b071a86810eaL)).super_("org.iets3.core.expr.base.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L)).parents("org.iets3.core.expr.base.structure.Expression").parentIds(MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3f50e70091b2b388L, "value", MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L), false, false, false, new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "4562400412156736392"))).children(new String[]{"value"}, new boolean[]{false}).sourceNode(new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "3626436127166566634")).create();
  }
  private static ConceptDescriptor createDescriptorForExpressionsList() {
    return new ConceptDescriptorBuilder("Issue1687.structure.ExpressionsList", MetaIdFactory.conceptId(0x1707e44579784fc0L, 0x955f614507f5e1bbL, 0x3253b071a869395bL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x3253b071a869395cL, "expressions", MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L), true, true, false, new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "3626436127166642524"))).children(new String[]{"expressions"}, new boolean[]{true}).rootable().sourceNode(new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "3626436127166642523")).create();
  }
  private static ConceptDescriptor createDescriptorForInRangeExpression() {
    return new ConceptDescriptorBuilder("Issue1687.structure.InRangeExpression", MetaIdFactory.conceptId(0x1707e44579784fc0L, 0x955f614507f5e1bbL, 0x3253b071a8681340L)).super_("org.iets3.core.expr.base.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L)).parents("org.iets3.core.expr.base.structure.Expression").parentIds(MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(0x7fa49d05838e7c8bL, "leftInclusive", new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "9197648986004946059")), new ConceptDescriptorBuilder.Prop(0x7fa49d05838e7c8dL, "rightInclusive", new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "9197648986004946061"))).properties("leftInclusive", "rightInclusive").childDescriptors(new ConceptDescriptorBuilder.Link(0x45f6793ede6dd4dL, "value", MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L), false, false, false, new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "315084383988407629")), new ConceptDescriptorBuilder.Link(0x45f6793ede6dd42L, "lowLimit", MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L), false, false, false, new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "315084383988407618")), new ConceptDescriptorBuilder.Link(0x45f6793ede6dd47L, "highLimit", MetaIdFactory.conceptId(0xcfaa4966b7d54b69L, 0xb66a309a6e1a7290L, 0x670d5e92f854a047L), false, false, false, new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "315084383988407623"))).children(new String[]{"value", "lowLimit", "highLimit"}, new boolean[]{false, false, false}).alias("in", "").sourceNode(new SNodePointer("r:6f2c57cf-6baa-4c23-9c5d-dda98cf2d3c5(Issue1687.structure)", "3626436127166567232")).create();
  }
}
